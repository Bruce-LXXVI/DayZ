-- ------------------------------------------------------------------------
-- $Id: DB-DELTA.mysql 394 2015-06-12 08:36:52Z roland.rusch@fima.ch $






-- ------------------------------------------------------------------------
-- 2015-07-25 00:00
CREATE TABLE `tOption` (
  `optname` VARCHAR(20) NOT NULL,
  `optvalue` VARCHAR(100) NOT NULL,
  PRIMARY KEY  (`optname`)
);
INSERT INTO `tOption` (`optname` ,`optvalue`) VALUES ('dbversion', '2015-07-25 00:00');








-- ------------------------------------------------------------------------
-- 2015-07-25 14:00
ALTER TABLE `object_data` CHANGE `ObjectID` `ObjectID` BIGINT(20) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=3000000000;
ALTER TABLE `event_scheduler` ADD `id` INT NOT NULL AUTO_INCREMENT FIRST, ADD PRIMARY KEY (`id`) ;

INSERT INTO `event_scheduler` (`id`, `System`, `LastRun`) VALUES (NULL, 'playZ_1min_scheduler', NULL);
INSERT INTO `event_scheduler` (`id`, `System`, `LastRun`) VALUES (NULL, 'pPlayZ_UID2ID', NULL);
INSERT INTO `event_scheduler` (`id`, `System`, `LastRun`) VALUES (NULL, 'pPlayZ_Cleanup', NULL);


DELIMITER ;;
CREATE PROCEDURE `pPlayZ_UID2ID`(IN `i` INT)
    MODIFIES SQL DATA
BEGIN
# Server instance ID.
#-----------------------------------------------
	DECLARE sInstance VARCHAR(8) DEFAULT i;
#-----------------------------------------------
#Last Ran
	update event_scheduler set LastRun = NOW() where System = "pPlayZ_UID2ID";
#Starts Cleanup

  UPDATE `object_data` SET `ObjectID`=`ObjectUID` WHERE `Instance`=sInstance AND `ObjectID`<>`ObjectUID`;

END ;;
DELIMITER ;


DELIMITER ;;
CREATE PROCEDURE `pPlayZ_Cleanup`(IN `i` INT)
    MODIFIES SQL DATA
BEGIN
# Server instance ID.
#-----------------------------------------------
	DECLARE sInstance VARCHAR(8) DEFAULT i;
#-----------------------------------------------
#Last Ran
	update event_scheduler set LastRun = NOW() where System = "pPlayZ_Cleanup";
#Starts Cleanup

  DELETE FROM `object_data` WHERE `Instance`=sInstance AND `CharacterID`=0 AND `Damage`>=1;

END ;;
DELIMITER ;

DELIMITER ;;
CREATE EVENT `playZ_1min_scheduler` ON SCHEDULE EVERY 1 MINUTE STARTS '2015-07-25 00:00:00' ON COMPLETION NOT PRESERVE ENABLE DO BEGIN
	update event_scheduler set LastRun = NOW() where System = "playZ_1min_scheduler";
	
	CALL `pPlayZ_UID2ID`('1');
	CALL `pPlayZ_Cleanup`('1');
	
END ;;
DELIMITER ;

UPDATE `tOption` SET `optvalue` = '2015-07-25 14:00' WHERE `optname`='dbversion';





-- ------------------------------------------------------------------------
-- 2015-07-29 22:00
ALTER TABLE `player_login` ADD INDEX(`datestamp`);
ALTER TABLE `player_login` ADD INDEX(`CharacterID`);
ALTER TABLE `player_login` ADD INDEX(`PlayerUID`);

CREATE VIEW `playz_player_logins` AS 
select `player_login`.`datestamp` AS `datestamp`,`player_data`.`playerName` AS `playerName`,`player_data`.`playerUID` AS `playerUID` from ((`player_data` left join `player_login` on((`player_data`.`playerUID` = `player_login`.`PlayerUID`))) left join `character_data` on((`character_data`.`CharacterID` = `player_login`.`CharacterID`))) order by `player_login`.`datestamp` desc;

CREATE VIEW `playz_player_login_count` AS 
select `player_data`.`playerName` AS `playerName`,`player_data`.`playerUID` AS `playerUID`,max(`player_login`.`datestamp`) AS `last_login`,min(`player_login`.`datestamp`) AS `first_login`,count(`player_login`.`LoginID`) AS `login_count` from ((`player_data` left join `player_login` on((`player_data`.`playerUID` = `player_login`.`PlayerUID`))) left join `character_data` on((`character_data`.`CharacterID` = `player_login`.`CharacterID`))) group by `player_data`.`playerUID` order by `last_login` desc;

UPDATE `tOption` SET `optvalue` = '2015-07-29 22:00' WHERE `optname`='dbversion';






-- ------------------------------------------------------------------------
-- 2015-07-30 22:00
ALTER TABLE `object_data`
MODIFY COLUMN `Hitpoints`  longtext NOT NULL;
UPDATE `tOption` SET `optvalue` = '2015-07-30 22:00' WHERE `optname`='dbversion';











-- ------------------------------------------------------------------------
-- 2015-08-25 23:00
DROP FUNCTION IF EXISTS `fPlayZ_generateID`;
DELIMITER ;;
CREATE FUNCTION `fPlayZ_generateID`(`inst` int, `ObjectUID` bigint(20)) RETURNS bigint(20)
BEGIN
	DECLARE Min BIGINT DEFAULT 10000000;
	DECLARE Max BIGINT DEFAULT 99999999;
	DECLARE ID BIGINT DEFAULT 0;

	IF (ObjectUID < 2147483647) THEN
		SET ID = ObjectUID;
	END IF;

	IF (ObjectUID < 300000) THEN
		SET ID = ObjectUID + 100000000;
	END IF;

	IF (ID IN (SELECT ObjectID FROM object_data WHERE Instance = inst)) THEN
		SET ID = 0;
	END IF;
	
	
	WHILE (ID = 0) DO
		SET ID = ROUND(Min + RAND() * (Max - Min)) + 100000000;
		
		IF (ID IN (SELECT ObjectID FROM object_data WHERE Instance = inst)) THEN
			SET ID = 0;
		END IF;
	END WHILE;
	
	RETURN ID;
END ;;
DELIMITER ;

DROP PROCEDURE IF EXISTS `pPlayZ_UID2ID`;
DELIMITER ;;
CREATE PROCEDURE `pPlayZ_UID2ID`(IN `i` INT)
    MODIFIES SQL DATA
BEGIN
# Server instance ID.
#-----------------------------------------------
	DECLARE sInstance VARCHAR(8) DEFAULT i;
#-----------------------------------------------
#Last Ran
	update event_scheduler set LastRun = NOW() where System = "pPlayZ_UID2ID";
#Starts setting ID
	UPDATE `object_data` SET `ObjectID`=fPlayZ_generateID(i, `ObjectUID`) WHERE `Instance`=sInstance AND (`ObjectID`<300000 OR `ObjectID`>=2147483647);
END ;;
DELIMITER ;

CREATE TABLE object_data_deleted LIKE object_data;
ALTER TABLE object_data_deleted DROP INDEX Instance;
ALTER TABLE object_data_deleted DROP INDEX ObjectUID;
ALTER TABLE object_data_deleted DROP INDEX CheckUID;
ALTER TABLE object_data_deleted CHANGE `ObjectID` `ObjectID` BIGINT(20) NOT NULL;
ALTER TABLE object_data_deleted DROP PRIMARY KEY;

ALTER TABLE object_data_deleted ADD INDEX(`ObjectID`);
ALTER TABLE object_data_deleted ADD INDEX(`ObjectUID`);
ALTER TABLE object_data_deleted ADD INDEX(`Classname`);
ALTER TABLE object_data_deleted ADD INDEX(`Datestamp`);
ALTER TABLE object_data_deleted ADD INDEX(`CharacterID`);
ALTER TABLE object_data_deleted ADD INDEX(`last_updated`);
ALTER TABLE object_data_deleted ADD `id` INT NOT NULL AUTO_INCREMENT, ADD PRIMARY KEY (`id`);
ALTER TABLE object_data_deleted CHANGE `id` `id` INT(11) NULL DEFAULT NULL AUTO_INCREMENT;
ALTER TABLE object_data_deleted ADD `deleted` DATETIME NULL DEFAULT NULL, ADD INDEX (`deleted`) ;

DROP PROCEDURE IF EXISTS `pPlayZ_Cleanup`;
DELIMITER ;;
CREATE PROCEDURE `pPlayZ_Cleanup`(IN `i` INT)
    MODIFIES SQL DATA
BEGIN
# Server instance ID.
#-----------------------------------------------
	DECLARE sInstance VARCHAR(8) DEFAULT i;
#-----------------------------------------------
#Last Ran
	update event_scheduler set LastRun = NOW() where System = "pPlayZ_Cleanup";
#Starts Cleanup

	INSERT INTO object_data_deleted (SELECT *, NULL, NOW() FROM object_data WHERE `Instance`=sInstance AND `Damage`>=1);
	DELETE FROM `object_data` WHERE `Instance`=sInstance AND `Damage`>=1;
END ;;
DELIMITER ;
UPDATE `tOption` SET `optvalue` = '2015-08-25 23:00' WHERE `optname`='dbversion';









-- ------------------------------------------------------------------------
-- 2016-03-12 11:45
INSERT INTO `event_scheduler` (`id`, `System`, `LastRun`) VALUES (NULL, 'playZ_restart_scheduler', NULL);
DELIMITER ;;
CREATE EVENT `playZ_restart_scheduler` ON SCHEDULE EVERY 1 DAY STARTS '2016-01-01 05:55:00' ON COMPLETION NOT PRESERVE DISABLE DO BEGIN
	UPDATE event_scheduler SET LastRun = NOW() WHERE System = "playZ_restart_scheduler";
	
	DELETE FROM object_data WHERE ObjectUID >= 280000000 AND ObjectUID < 290000000;
	
END;;
DELIMITER ;
UPDATE `tOption` SET `optvalue` = '2016-03-12 11:45' WHERE `optname`='dbversion';




-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- 2016-12-02 01:00
DROP EVENT `playZ_restart_scheduler`;
DELIMITER ;;
CREATE EVENT `playZ_restart_scheduler` ON SCHEDULE EVERY 1 DAY STARTS '2016-01-01 05:55:00' ON COMPLETION NOT PRESERVE ENABLE DO
BEGIN

  UPDATE event_scheduler SET LastRun = NOW() WHERE System = "playZ_restart_scheduler";

  DELETE FROM object_data WHERE ObjectUID >= 280000000 AND ObjectUID < 290000000;

  # temp. fix for the bike problem
  DELETE FROM object_data WHERE `Classname` LIKE 'Old_bike_%' AND ObjectID < 200000000;

  # FIX ObjectIDs
  ALTER TABLE object_data AUTO_INCREMENT=3000000001;
  UPDATE object_data SET ObjectID=ObjectID+3000000001;

END;;
DELIMITER ;
UPDATE `tOption` SET `optvalue` = '2016-12-02 01:00' WHERE `optname`='dbversion';




-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- 2017-06-26 00:00
REPLACE INTO `event_scheduler` (`id`, `System`, `LastRun`) VALUES (NULL, 'playZ_restart_scheduler', NULL);
DROP EVENT `playZ_restart_scheduler`;
DELIMITER ;;
CREATE EVENT `playZ_restart_scheduler` ON SCHEDULE EVERY 1 DAY STARTS '2016-01-01 05:55:00' ON COMPLETION NOT PRESERVE ENABLE DO
BEGIN

  UPDATE `event_scheduler` SET `LastRun` = NOW() WHERE `System` = "playZ_restart_scheduler";

  DELETE FROM `object_data` WHERE `ObjectUID` >= 280000000 AND `ObjectUID` < 290000000;

  # temp. fix for the bike problem
  DELETE FROM `object_data` WHERE `Classname` LIKE 'Old_bike_%' AND `ObjectID` < 200000000;

  # FIX ObjectIDs
  ALTER TABLE `object_data` AUTO_INCREMENT=3000000001;
  UPDATE `object_data` SET `ObjectID`=`ObjectID` + 3000000001, `last_updated`=`last_updated`;

END;;
DELIMITER ;

DROP PROCEDURE IF EXISTS `pPlayZ_UID2ID`;
DELIMITER ;;
CREATE PROCEDURE `pPlayZ_UID2ID`(IN `i` INT)
    MODIFIES SQL DATA
BEGIN
# Server instance ID.
#-----------------------------------------------
	DECLARE sInstance VARCHAR(8) DEFAULT i;
#-----------------------------------------------
#Last Ran
  UPDATE `event_scheduler` SET `LastRun` = NOW() WHERE `System` = "pPlayZ_UID2ID";
#Starts setting ID
  UPDATE `object_data` 
  SET
    `ObjectID`=fPlayZ_generateID(i, `ObjectUID`),
    `last_updated`=`last_updated`
  WHERE
    `Instance`=sInstance
    AND
    (`ObjectID`<300000 OR `ObjectID`>=2147483647);
END ;;
DELIMITER ;

UPDATE `tOption` SET `optvalue` = '2017-06-26 00:00' WHERE `optname`='dbversion';




-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- 2017-09-17 15:00
DROP EVENT IF EXISTS `playZ_1min_scheduler`;
DELIMITER ;;
CREATE EVENT `playZ_1min_scheduler` ON SCHEDULE EVERY 1 MINUTE STARTS '2015-07-25 00:00:00' ON COMPLETION NOT PRESERVE ENABLE DO
BEGIN
	REPLACE INTO `event_scheduler` (`System`, `LastRun`) VALUES ('playZ_1min_scheduler', NOW());
	
	CALL `pPlayZ_UID2ID`('1');
	
END ;;
DELIMITER ;

DROP PROCEDURE IF EXISTS `pPlayZ_Cleanup`;
DELIMITER ;;
CREATE PROCEDURE `pPlayZ_Cleanup`()
BEGIN
	# Last run
	REPLACE INTO `event_scheduler` (`System`, `LastRun`) VALUES ('pPlayZ_Cleanup', NOW());

	# outofbounds cleanup
	#CALL pPlayZ_CleanupOOB();

	# remove damaged objects
	DELETE FROM object_data WHERE CharacterID != 0 AND Damage >= 1;

	# remove damaged vehicles
	DELETE FROM object_data
	WHERE CharacterID = 0
		AND Damage >= 1
		#AND SYSDATE() > DATE(last_updated) + INTERVAL 24 HOUR
	;

	# remove empty tents and stashes older than seven days
	DELETE
	FROM object_data
	WHERE (Classname LIKE 'TentStorage%' OR Classname LIKE 'StashSmall%' OR Classname LIKE 'StashMedium%' OR Classname LIKE 'DomeTentStorage%')
		AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
		AND Inventory = '[[[],[]],[[],[]],[[],[]]]';
	
	DELETE
	FROM object_data
	WHERE (Classname LIKE 'TentStorage%' OR Classname LIKE 'StashSmall%' OR Classname LIKE 'StashMedium%' OR Classname LIKE 'DomeTentStorage%')
		AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
		AND Inventory = '[]';

	# remove barbed wire older than two days
	DELETE
	FROM object_data
	WHERE Classname = 'Wire_cat1'
		AND DATE(last_updated) < CURDATE() - INTERVAL 2 DAY;

	# remove Tank Traps older than fifteen days
	DELETE
	FROM object_data
	WHERE Classname = 'Hedgehog_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 15 DAY;

	# remove Sandbags older than twenty days
	DELETE
	FROM object_data
	WHERE Classname = 'Sandbag1_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 20 DAY;

	# remove Traps older than five days
	DELETE
	FROM object_data
	WHERE Classname IN ('BearTrap_DZ', 'TrapBearTrapFlare', 'TrapBearTrapSmoke', 'Trap_Cans', 'TrapTripwireFlare', 'TrapTripwireGrenade', 'TrapTripwireSmoke')
		AND DATE(last_updated) < CURDATE() - INTERVAL 5 DAY; 

	# remove incomplete gates after 1 Day
	#DELETE
	#FROM object_data
	#WHERE (Classname = 'WoodenGate_foundation')
	#	AND DATE(last_updated) < CURDATE() - INTERVAL 1 Day;

	# remove incomplete fences after 1 Day
	#DELETE
	#FROM object_data
	#WHERE (Classname = 'WoodenFence_1_foundation')
	#	AND DATE(last_updated) < CURDATE() - INTERVAL 1 Day;  

	# remove incomplete fences after 3 Dayz
	#DELETE
	#FROM object_data
	#WHERE (Classname = 'WoodenFence_1_frame' or Classname = 'WoodenFence_quaterpanel' or Classname = 'WoodenFence_halfpanel' or Classname = 'WoodenFence_thirdpanel')
	#	AND DATE(last_updated) < CURDATE() - INTERVAL 3 Day; 

	# remove dead players from data table after 90 days
	DELETE
	FROM character_data
	WHERE Alive=0 AND DATE(last_updated) < CURDATE() - INTERVAL 90 Day; 

	# Remove Bad Data
	DELETE
	FROM object_data
	WHERE Classname like '%_base';

	# Remove wire if the owner has died
	#DELETE
	#FROM object_data
	#LEFT JOIN character_data ON object_data.CharacterID = character_data.CharacterID
	#WHERE object_data.Classname = 'Wire_cat1'
	#	AND character_data.CharacterID IS NOT NULL
	#	AND character_data.Alive = 0;

	# remove Base_Fire_DZ older than 5 days
	DELETE
	FROM object_data
	WHERE Classname = 'Base_Fire_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 5 DAY;

END ;;
DELIMITER ;

DROP PROCEDURE IF EXISTS `pPlayZ_CleanupBase`;
DELIMITER ;;
CREATE PROCEDURE `pPlayZ_CleanupBase`()
BEGIN
	# Last run
	REPLACE INTO `event_scheduler` (`System`, `LastRun`) VALUES ('pPlayZ_CleanupBase', NOW());

# PlayZ special: no maintenance if modified in the last 30 days
	UPDATE `object_data` `o`
	SET
		`o`.`last_updated`=`o`.`last_updated`,
		`o`.`Hitpoints`='["NO-Maintenance"]'
	WHERE
		`Classname` IN (
				'WoodenFence_1', 'WoodenFence_2', 'WoodenFence_3', 'WoodenFence_4', 'WoodenFence_5', 'WoodenFence_6', 'WoodenFence_7',
				'WoodenGate_1', 'WoodenGate_2', 'WoodenGate_3', 'WoodenGate_4',
				'WoodenFence_1_frame', 'WoodenFence_quaterpanel', 'WoodenFence_halfpanel', 'WoodenFence_thirdpanel'
				)
		AND `o`.`Hitpoints` = '[]'
		AND `o`.`last_updated` > CURDATE() - INTERVAL 32 DAY
		;


# PlayZ special: no maintenance if player logged in the last 30 days
	UPDATE `object_data` `o`
	LEFT JOIN `player_login` `pl` ON `pl`.`CharacterID`=`o`.`CharacterID` OR `o`.`Inventory` LIKE CONCAT('%"', `pl`.`PlayerUID`, '"%')
	SET
		`o`.`last_updated`=`o`.`last_updated`,
		`o`.`Hitpoints`='["NO-Maintenance"]'
	WHERE
		`Classname` IN (
				'WoodenFence_1', 'WoodenFence_2', 'WoodenFence_3', 'WoodenFence_4', 'WoodenFence_5', 'WoodenFence_6', 'WoodenFence_7',
				'WoodenGate_1', 'WoodenGate_2', 'WoodenGate_3', 'WoodenGate_4',
				'WoodenFence_1_frame', 'WoodenFence_quaterpanel', 'WoodenFence_halfpanel', 'WoodenFence_thirdpanel'
				)
		AND `o`.`Hitpoints` IN ('[]', '["Maintenance"]')
		AND `pl`.`datestamp` > CURDATE() - INTERVAL 32 DAY
		AND `pl`.`Action` = 0
		;


	# Start Maintenance 1-4 Mode
	UPDATE
		object_data 
			SET Hitpoints = '["Maintenance"]'
				WHERE Classname IN ('WoodenFence_1', 'WoodenFence_2', 'WoodenFence_3', 'WoodenFence_4')
				AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
				AND Hitpoints = '[]';

	# Start Maintenance 5-7 Mode
	UPDATE
		object_data 
			SET Hitpoints = '["Maintenance"]'
				WHERE Classname IN ('WoodenFence_5', 'WoodenFence_6', 'WoodenFence_7')
				AND DATE(last_updated) < CURDATE() - INTERVAL 14 DAY
				AND Hitpoints = '[]';

	# Check WoodenFence_1_foundation
	UPDATE
		object_data
			SET Classname = 'WoodenFence_1_foundation'
				WHERE Classname = 'WoodenFence_1_frame'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;

	# Check WoodenFence_1_frame
	UPDATE
		object_data
			SET Classname = 'WoodenFence_1_frame'
				WHERE Classname = 'WoodenFence_quaterpanel'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;

	# Check WoodenFence_halfpanel
	UPDATE
		object_data
			SET Classname = 'WoodenFence_quaterpanel'
				WHERE Classname = 'WoodenFence_halfpanel'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
				
	# Check WoodenFence_thirdpanel
	UPDATE
		object_data
			SET Classname = 'WoodenFence_halfpanel'
				WHERE Classname = 'WoodenFence_thirdpanel'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
				 
	# Check fence 1
	UPDATE
		object_data
			SET Classname = 'WoodenFence_thirdpanel'
				WHERE Classname = 'WoodenFence_1'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
	# Check fence 2
	UPDATE
		object_data
			SET Classname = 'WoodenFence_1'
				WHERE Classname = 'WoodenFence_2'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
	# Check fence 3
	UPDATE
		object_data
			SET Classname = 'WoodenFence_2'
				WHERE Classname = 'WoodenFence_3'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
	# Check fence 4
	UPDATE
		object_data
			SET Classname = 'WoodenFence_3'
				WHERE Classname = 'WoodenFence_4'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
	# Check fence 5
	UPDATE
		object_data
			SET Classname = 'WoodenFence_4'
				WHERE Classname = 'WoodenFence_5'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 6 DAY;
	# Check fence 6
	UPDATE
		object_data
			SET Classname = 'WoodenFence_5'
				WHERE Classname = 'WoodenFence_6'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 6 DAY;
	# Check fence 7
	UPDATE
		object_data
			SET Classname = 'WoodenFence_6'
				WHERE Classname = 'WoodenFence_7'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 6 DAY;


	# DayZ_WoodenGates = ["WoodenGate_1","WoodenGate_2","WoodenGate_3","WoodenGate_4"];
	# Start Maintenance Mode Gates
	UPDATE
		object_data 
			SET Hitpoints = '["Maintenance"]'
				WHERE Classname IN ('WoodenGate_1', 'WoodenGate_2', 'WoodenGate_3', 'WoodenGate_4')
				AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
				AND Hitpoints = '[]';

	# Check WoodenGate_1
	UPDATE
		object_data
			SET Classname = 'WoodenGate_foundation'
				WHERE Classname = 'WoodenGate_1'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
				
	# Check WoodenGate_2
	UPDATE
		object_data
			SET Classname = 'WoodenGate_1'
				WHERE Classname = 'WoodenGate_2'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
				
	# Check WoodenGate_3
	UPDATE
		object_data
			SET Classname = 'WoodenGate_2'
				WHERE Classname = 'WoodenGate_3'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;
				
	# Check WoodenGate_4
	UPDATE
		object_data
			SET Classname = 'WoodenGate_3'
				WHERE Classname = 'WoodenGate_4'
				AND Hitpoints = '["Maintenance"]'
				AND DATE(last_updated) < CURDATE() - INTERVAL 3 DAY;


# PlayZ special: reset Hitpoints to normal
	UPDATE `object_data` `o`
	SET
		`o`.`last_updated`=`o`.`last_updated`,
		`o`.`Hitpoints`='[]'
	WHERE
		`Classname` IN (
				'WoodenFence_1', 'WoodenFence_2', 'WoodenFence_3', 'WoodenFence_4', 'WoodenFence_5', 'WoodenFence_6', 'WoodenFence_7',
				'WoodenGate_1', 'WoodenGate_2', 'WoodenGate_3', 'WoodenGate_4',
				'WoodenFence_1_frame', 'WoodenFence_quaterpanel', 'WoodenFence_halfpanel', 'WoodenFence_thirdpanel'
				)
		AND Hitpoints = '["NO-Maintenance"]';

END ;;
DELIMITER ;

DROP EVENT IF EXISTS `playZ_restart_scheduler`;
DELIMITER ;;
CREATE EVENT `playZ_restart_scheduler` ON SCHEDULE EVERY 1 DAY STARTS '2016-01-01 05:55:00' ON COMPLETION NOT PRESERVE ENABLE DO
BEGIN
	# last run
	REPLACE INTO `event_scheduler` (`System`, `LastRun`) VALUES ('playZ_restart_scheduler', NOW());

	DELETE FROM `object_data` WHERE `ObjectUID` >= 280000000 AND `ObjectUID` < 290000000;

	# temp. fix for the bike problem
	DELETE FROM `object_data` WHERE `Classname` LIKE 'Old_bike_%' AND `ObjectID` < 200000000;

	CALL pPlayZ_Cleanup();
	CALL pPlayZ_CleanupBase();

	# FIX ObjectIDs
	ALTER TABLE `object_data` AUTO_INCREMENT=3000000001;
	UPDATE `object_data` SET `ObjectID`=`ObjectID` + 3000000001, `last_updated`=`last_updated`;

END;;
DELIMITER ;

ALTER TABLE `object_data` ADD INDEX(`CharacterID`);
ALTER TABLE `player_login` ADD INDEX(`Action`);
DELETE FROM `event_scheduler` WHERE `System` IN ('playZ_restart_scheduler', 'playZ_1min_scheduler', 'pPlayZ_Cleanup', 'pPlayZ_CleanupBase');

UPDATE `tOption` SET `optvalue` = '2017-09-17 15:00' WHERE `optname`='dbversion';





-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- 2017-09-23 23:45
DROP PROCEDURE IF EXISTS `pPlayZ_Cleanup`;
DELIMITER ;;
CREATE PROCEDURE `pPlayZ_Cleanup`()
BEGIN
	# Last run
	REPLACE INTO `event_scheduler` (`System`, `LastRun`) VALUES ('pPlayZ_Cleanup', NOW());

	# outofbounds cleanup
	#CALL pPlayZ_CleanupOOB();

	# remove damaged objects
	DELETE FROM object_data WHERE CharacterID != 0 AND Damage >= 1;

	# remove damaged vehicles after 24h
	DELETE FROM object_data WHERE CharacterID = 0 AND Damage >= 1
		AND SYSDATE() > DATE(last_updated) + INTERVAL 24 HOUR
	;

	# remove empty tents and stashes older than seven days
	DELETE
	FROM object_data
	WHERE (Classname LIKE 'TentStorage%' OR Classname LIKE 'StashSmall%' OR Classname LIKE 'StashMedium%' OR Classname LIKE 'DomeTentStorage%')
		AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
		AND Inventory = '[[[],[]],[[],[]],[[],[]]]';
	
	DELETE
	FROM object_data
	WHERE (Classname LIKE 'TentStorage%' OR Classname LIKE 'StashSmall%' OR Classname LIKE 'StashMedium%' OR Classname LIKE 'DomeTentStorage%')
		AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
		AND Inventory = '[]';

	# remove barbed wire older than two days
	DELETE
	FROM object_data
	WHERE Classname = 'Wire_cat1'
		AND DATE(last_updated) < CURDATE() - INTERVAL 2 DAY;

	# remove Tank Traps older than fifteen days
	DELETE
	FROM object_data
	WHERE Classname = 'Hedgehog_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 15 DAY;

	# remove Sandbags older than twenty days
	DELETE
	FROM object_data
	WHERE Classname = 'Sandbag1_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 20 DAY;

	# remove Traps older than five days
	DELETE
	FROM object_data
	WHERE Classname IN ('BearTrap_DZ', 'TrapBearTrapFlare', 'TrapBearTrapSmoke', 'Trap_Cans', 'TrapTripwireFlare', 'TrapTripwireGrenade', 'TrapTripwireSmoke')
		AND DATE(last_updated) < CURDATE() - INTERVAL 5 DAY; 

	# remove incomplete gates after 1 Day
	#DELETE
	#FROM object_data
	#WHERE (Classname = 'WoodenGate_foundation')
	#	AND DATE(last_updated) < CURDATE() - INTERVAL 1 Day;

	# remove incomplete fences after 1 Day
	#DELETE
	#FROM object_data
	#WHERE (Classname = 'WoodenFence_1_foundation')
	#	AND DATE(last_updated) < CURDATE() - INTERVAL 1 Day;  

	# remove incomplete fences after 3 Dayz
	#DELETE
	#FROM object_data
	#WHERE (Classname = 'WoodenFence_1_frame' or Classname = 'WoodenFence_quaterpanel' or Classname = 'WoodenFence_halfpanel' or Classname = 'WoodenFence_thirdpanel')
	#	AND DATE(last_updated) < CURDATE() - INTERVAL 3 Day; 

	# remove dead players from data table after 90 days
	#DELETE
	#FROM character_data
	#WHERE Alive=0 AND DATE(last_updated) < CURDATE() - INTERVAL 90 Day; 

	# Remove Bad Data
	DELETE
	FROM object_data
	WHERE Classname like '%_base';

	# Remove wire if the owner has died
	#DELETE
	#FROM object_data
	#LEFT JOIN character_data ON object_data.CharacterID = character_data.CharacterID
	#WHERE object_data.Classname = 'Wire_cat1'
	#	AND character_data.CharacterID IS NOT NULL
	#	AND character_data.Alive = 0;

	# remove Base_Fire_DZ older than 5 days
	DELETE
	FROM object_data
	WHERE Classname = 'Base_Fire_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 5 DAY;

END ;;
DELIMITER ;
UPDATE `tOption` SET `optvalue` = '2017-09-23 23:45' WHERE `optname`='dbversion';










-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
-- 2017-11-25 20:39
DROP PROCEDURE IF EXISTS `pPlayZ_Cleanup`;
DELIMITER ;;
CREATE PROCEDURE `pPlayZ_Cleanup`()
BEGIN
	# Last run
	REPLACE INTO `event_scheduler` (`System`, `LastRun`) VALUES ('pPlayZ_Cleanup', NOW());

	# outofbounds cleanup
	#CALL pPlayZ_CleanupOOB();

	# remove damaged objects
	DELETE FROM object_data WHERE CharacterID != 0 AND Damage >= 1;

	# remove damaged vehicles after 24h
	DELETE FROM object_data WHERE CharacterID = 0 AND Damage >= 1
		AND SYSDATE() > DATE(last_updated) + INTERVAL 24 HOUR
	;

	# remove empty tents and stashes older than seven days
	DELETE
	FROM object_data
	WHERE (Classname LIKE 'TentStorage%' OR Classname LIKE 'StashSmall%' OR Classname LIKE 'StashMedium%' OR Classname LIKE 'DomeTentStorage%')
		AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
		AND Inventory = '[[[],[]],[[],[]],[[],[]]]';
	
	DELETE
	FROM object_data
	WHERE (Classname LIKE 'TentStorage%' OR Classname LIKE 'StashSmall%' OR Classname LIKE 'StashMedium%' OR Classname LIKE 'DomeTentStorage%')
		AND DATE(last_updated) < CURDATE() - INTERVAL 7 DAY
		AND Inventory = '[]';

	# remove barbed wire older than two days
	DELETE
	FROM object_data
	WHERE Classname = 'Wire_cat1'
		AND DATE(last_updated) < CURDATE() - INTERVAL 2 DAY;

	# remove Tank Traps older than fifteen days
	DELETE
	FROM object_data
	WHERE Classname = 'Hedgehog_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 15 DAY;

	# remove Sandbags older than twenty days
	DELETE
	FROM object_data
	WHERE Classname = 'Sandbag1_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 20 DAY;

	# remove Traps older than 5 days
	DELETE
	FROM object_data
	WHERE Classname IN ('BearTrap_DZ', 'TrapBearTrapFlare', 'TrapBearTrapSmoke', 'Trap_Cans', 'TrapTripwireFlare', 'TrapTripwireGrenade', 'TrapTripwireSmoke')
		AND DATE(last_updated) < CURDATE() - INTERVAL 5 DAY; 

	# remove incomplete gates after 1 Day
	DELETE
	FROM object_data
	WHERE (Classname = 'WoodenGate_foundation')
		AND DATE(last_updated) < CURDATE() - INTERVAL 1 Day;

	# remove incomplete fences after 1 Day
	DELETE
	FROM object_data
	WHERE (Classname = 'WoodenFence_1_foundation')
		AND DATE(last_updated) < CURDATE() - INTERVAL 1 Day;  

	# remove incomplete fences after 3 Dayz
	DELETE
	FROM object_data
	WHERE (Classname = 'WoodenFence_1_frame' or Classname = 'WoodenFence_quaterpanel' or Classname = 'WoodenFence_halfpanel' or Classname = 'WoodenFence_thirdpanel')
		AND DATE(last_updated) < CURDATE() - INTERVAL 3 Day; 

	# remove dead players from data table after 90 days
	#DELETE
	#FROM character_data
	#WHERE Alive=0 AND DATE(last_updated) < CURDATE() - INTERVAL 90 Day; 

	# Remove Bad Data
	DELETE
	FROM object_data
	WHERE Classname like '%_base';

	# Remove wire if the owner has died
	#DELETE
	#FROM object_data
	#LEFT JOIN character_data ON object_data.CharacterID = character_data.CharacterID
	#WHERE object_data.Classname = 'Wire_cat1'
	#	AND character_data.CharacterID IS NOT NULL
	#	AND character_data.Alive = 0;

	# remove Base_Fire_DZ older than 30 days
	DELETE
	FROM object_data
	WHERE Classname = 'Base_Fire_DZ'
		AND DATE(last_updated) < CURDATE() - INTERVAL 30 DAY;

END ;;
DELIMITER ;
UPDATE `tOption` SET `optvalue` = '2017-11-25 20:39' WHERE `optname`='dbversion';






















-- ------------------------------------------------------------------------
-- EXPORT static spawn points
-- ------------------------------------------------------------------------
SET group_concat_max_len=18446744073709547520;
SELECT
    GROUP_CONCAT(
      '[',
    	CONCAT('"', ObjectUID, '", '), 
      CONCAT('"', Classname, '", '), 
      Worldspace, ', ',
      Inventory, ', ',
      Hitpoints,
      ']'
      SEPARATOR ',\n'
    )
AS SQF FROM object_spawns;




-- ------------------------------------------------------------------------
-- EXPORT Classnames for DayZ_SafeObjects
-- ------------------------------------------------------------------------
SET group_concat_max_len=18446744073709547520;
SELECT GROUP_CONCAT(DISTINCT
      '"',
    	Classname,
      '"'
      SEPARATOR ', '
    )
AS SQF FROM object_spawns;




-- ------------------------------------------------------------------------
-- CLEANUP
-- ------------------------------------------------------------------------
TRUNCATE TABLE character_data;
TRUNCATE TABLE character_dead;
TRUNCATE TABLE object_data;
TRUNCATE TABLE object_data_deleted;
TRUNCATE TABLE player_data;
TRUNCATE TABLE player_login;




ALTER TABLE `object_data` CHANGE `Hitpoints` `Hitpoints` LONGTEXT NOT NULL;
ALTER TABLE `object_data_deleted` CHANGE `Hitpoints` `Hitpoints` LONGTEXT NOT NULL;

# FIX ObjectIDs
ALTER TABLE `object_data` AUTO_INCREMENT=3000000001;
UPDATE `object_data` SET `ObjectID`=`ObjectID` + 3000000001, `last_updated`=`last_updated`;

